{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2019-10-15T05:34:35.560Z",
    "end": "2019-10-15T05:34:35.589Z",
    "duration": 29,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "54cc0825-6847-4e64-b575-5c4a614ddf6d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29c775f4-731a-494d-954a-94b9288561af",
          "title": "healthcheck",
          "fullFile": "/home/fendy/project/QzNode/packages/expressHelper/test/healthcheck/health.ts",
          "file": "/test/healthcheck/health.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "/~/health should return http status code 204",
              "fullTitle": "healthcheck /~/health should return http status code 204",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function () {\n    var app, _a, _b, response;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                app = express();\n                _b = (_a = app).use;\n                return [4 /*yield*/, index_1.default({})];\n            case 1:\n                _b.apply(_a, [_c.sent()]);\n                return [4 /*yield*/, chai.request(app)\n                        .get('/~/health')];\n            case 2:\n                response = _c.sent();\n                assert.equal(204, response.status);\n                return [2 /*return*/];\n        }\n    });\n});",
              "err": {},
              "uuid": "79184a69-d774-4281-9d3c-97bf5a30eaca",
              "parentUUID": "29c775f4-731a-494d-954a-94b9288561af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/~/liveness should check configured",
              "fullTitle": "healthcheck /~/liveness should check configured",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function () {\n    var app, check, _a, _b, response;\n    var _this = this;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                app = express();\n                check = {\n                    mysql: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            return [2 /*return*/];\n                        });\n                    }); },\n                    mongo: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            throw new Error(\"Mongo not connected\");\n                        });\n                    }); }\n                };\n                _b = (_a = app).use;\n                return [4 /*yield*/, index_1.default({\n                        check: check\n                    })];\n            case 1:\n                _b.apply(_a, [_c.sent()]);\n                return [4 /*yield*/, chai.request(app)\n                        .get('/~/readiness')];\n            case 2:\n                response = _c.sent();\n                assert.equal(\"ok\", response.body.mysql.status);\n                assert.equal(\"failed\", response.body.mongo.status);\n                assert.equal(\"Mongo not connected\", response.body.mongo.err);\n                return [2 /*return*/];\n        }\n    });\n});",
              "err": {},
              "uuid": "8069805d-f7dc-4cbb-aa64-53da8a0d149c",
              "parentUUID": "29c775f4-731a-494d-954a-94b9288561af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79184a69-d774-4281-9d3c-97bf5a30eaca",
            "8069805d-f7dc-4cbb-aa64-53da8a0d149c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}